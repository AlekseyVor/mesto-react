{"version":3,"sources":["images/header-logo.svg","components/Header.js","utils/constants.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logoHeaderPath","alt","config","errorActiveClass","errorInputClass","errorInputSelector","inputSelector","submitSelector","profileEditorSelector","placeEditorSelector","avatarEditorSelector","nameSelector","jobSelector","cardTemplateDefault","cardsContainerSelector","popupPhotoSelector","popupProfileSelector","popupPlaceSelector","popupAvatarSelector","poupDeleteSelector","cardSelector","likeSelector","likeActiveClass","placeDeleteSelector","placeImageSelector","placeTitleSelector","popupActiveClass","ESCAPE_KEY","closeButtonSelector","formSelector","popupPhotoImgSelector","popupPhotoTitleSelector","avatarSelector","methodGET","methodPUT","methodDELETE","methodPATCH","methodPOST","urlLikes","urlMe","urlCards","urlAvatar","token","loadingText","api","option","_search","url","type","fetch","_option","baseUrl","method","headers","authorization","_searchCardId","cardid","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","then","getInitialCards","patchUserInfo","userInfo","body","JSON","stringify","name","about","postNewCard","card","place","link","deleteCard","updateLike","patchUserAvatar","avatar","this","_config","Card","props","onClick","onCardClick","likes","length","Main","React","useState","userAvatar","userName","userDescription","user","setUser","cards","setCards","useEffect","onEditAvatar","id","onEditProfile","onAddPlace","map","item","i","Footer","PopupWithForm","isOpen","title","novalidate","children","onClose","ImagePopup","isEmpty","Object","keys","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","minlength","maxlength","placeholder","required","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a89cadb5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header-logo.abb64ac9.svg\";","import logoHeaderPath from '../images/header-logo.svg';\n\nexport default function Header() {\nreturn (\n<header className=\"header\">\n        <img src={logoHeaderPath} alt=\"Лого\" className=\"header__logo\"/>\n</header>\n)\n}","export const config = {\n    errorActiveClass: 'popup__input-error_active',\n    errorInputClass: 'popup__input_invalid',\n    errorInputSelector: '.popup__input-error',\n    inputSelector: '.popup__input',\n    submitSelector: '.popup__submit',\n    profileEditorSelector: '.profile-editor',\n    placeEditorSelector: '.place-editor',\n    avatarEditorSelector: '.avatar-editor',\n    nameSelector: '.profile__name',\n    jobSelector: '.profile__job',\n    cardTemplateDefault: '.card-template_type_default',\n    cardsContainerSelector: '.places',\n    popupPhotoSelector: '#photo',\n    popupProfileSelector: '#profile',\n    popupPlaceSelector: '#newplace',\n    popupAvatarSelector: '#avatar',\n    poupDeleteSelector: '#delete',\n    cardSelector: '.place',\n    likeSelector: '.place__like',\n    likeActiveClass: 'place__like_active',\n    placeDeleteSelector: '.place__delete',\n    placeImageSelector: '.place__image',\n    placeTitleSelector: '.place__title',\n    popupActiveClass: 'popup_opened',\n    ESCAPE_KEY: 'Escape',\n    closeButtonSelector: '.popup__close',\n    formSelector: '.form',\n    popupPhotoImgSelector: '.popup__img',\n    popupPhotoTitleSelector: '.popup__title-img',\n    avatarSelector: '.profile__avatar',\n    methodGET: 'GET',\n    methodPUT: 'PUT',\n    methodDELETE: 'DELETE',\n    methodPATCH: 'PATCH',\n    methodPOST: 'POST',\n    urlLikes: '/cards/likes/',\n    urlMe: '/users/me',\n    urlCards: '/cards/',\n    urlAvatar: '/users/me/avatar',\n    token: '4caf9c4d-a302-411a-9ffa-2ef00699d265',\n    loadingText: 'Сохранение...'\n}\n","import {config} from './constants.js';\n\nclass Api {\n    constructor(config, option) {\n        this._config = config;\n        this._option = option; \n    }\n\n    _search = (url, type, token) => {\n      return fetch(`${this._option.baseUrl}${url}`,{\n        method: `${type}`,\n        headers: {\n          authorization: `${token}`,\n          'Content-Type': 'application/json'\n        }})\n    }\n\n    _searchCardId = (url, type, token, cardid) => {\n      return fetch(`${this._option.baseUrl}${url}${cardid}`,{\n        method: `${type}`,\n        headers: {\n          authorization: `${token}`,\n          'Content-Type': 'application/json'\n        }})\n    }\n\n    _checkResponse = (res) => {\n      if(res.ok) {return res.json()}\n      return Promise.reject(`Ошибка ${res.status}`)\n    }\n\n    getUserInfo = (url, type, token) => {\n      return this._search(url, type, token)\n      .then(this._checkResponse)\n      \n  }\n\n    getInitialCards = (url, type, token) => {\n      return this._search(url, type, token)\n      .then(this._checkResponse);\n  }\n\n    patchUserInfo = (url, type, token, userInfo) => {\n    return fetch(`${this._option.baseUrl}${url}`,{\n      method: `${type}`,\n      headers: {\n        authorization: `${token}`,\n        'Content-Type': 'application/json'\n      },\n      body:  JSON.stringify({\n        name: `${userInfo.name}`,\n        about: `${userInfo.about}`\n      })\n    })\n    .then(this._checkResponse);\n}\n\n  postNewCard = (url, type, token, card) => {\n    return fetch(`${this._option.baseUrl}${url}`,{\n      method: `${type}`,\n      headers: {\n        authorization: `${token}`,\n        'Content-Type': 'application/json'\n      },\n      body:  JSON.stringify({\n        name: `${card.place}`,\n        link: `${card.url}`\n      })\n    })\n    .then(this._checkResponse);\n}\n\n  deleteCard = (url, type, token, cardid) => {\n    return this._searchCardId(url, type, token, cardid)\n    .then(this._checkResponse);\n  }\n\n  updateLike = (url, type, token, cardid) => {\n    return this._searchCardId(url, type, token, cardid)\n    .then(this._checkResponse);\n  }\n\n  patchUserAvatar = (url, type, token, avatar) => {\n    return fetch(`${this._option.baseUrl}${url}`,{\n      method: `${type}`,\n      headers: {\n        authorization: `${token}`,\n        'Content-Type': 'application/json'\n      },\n      body:  JSON.stringify({\n        avatar: `${avatar}`,\n      })\n    })\n    .then(this._checkResponse);\n  }\n}\n\nexport const api = new Api(config, {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  method: '',\n  headers: {\n  authorization: config.token,\n  'Content-Type': 'application/json'\n  }\n});","export default function Card(props) {\n        function handleClick() {\n        props.onCardClick(props.card);\n    } \n        return (\n            <>\n            <div className=\"place\">\n                    <img src={props.card.link} alt={props.card.name} className=\"place__image\" onClick={handleClick}/>\n                    <div className=\"place__header\">\n                        <h2 className=\"place__title\">{props.card.name}</h2>\n                        <div>\n                        <button type=\"button\" className=\"place__like\"></button>\n                        <p className=\"place__likes\">{props.card.likes.length}</p>\n                        </div>\n                    </div>\n                    <button type=\"button\" className=\"place__delete\"></button>\n            </div>\n            </>\n        )\n}","import {api} from '../utils/Api.js';\nimport {config} from '../utils/constants.js';\nimport Card from './Card';\nimport React from 'react';\n\nexport default function Main(props) {\n    \n\n    const [user,setUser] = React.useState({userAvatar: '',userName: '', userDescription: ''})\n    const [cards,setCards] = React.useState([])\n\n    React.useEffect( () => {\n        api.getUserInfo(config.urlMe, config.methodGET, config.token)\n        .then((user) => {\n            setUser({\n            userAvatar: user.avatar,\n            userName: user.name,\n            userDescription: user.about\n            })\n        })\n    }, [])\n\n    React.useEffect(() => {\n        api.getInitialCards(config.urlCards, config.methodGET, config.token)\n        .then((cards) => {\n            setCards(cards);\n        })\n    }, [])\n\n    return(\n    <main>\n        <section className=\"profile\">\n            <button type=\"button\" className=\"profile__avatar-edit\" onClick={props.onEditAvatar}><img src={user.userAvatar} alt=\"Аватар\" className=\"profile__avatar\"/></button>\n            <div className=\"profile__info\">\n                <h1 className=\"profile__name\" id=\"username\">{user.userName}</h1>\n                <button type=\"button\" className=\"profile__user-edit\" onClick={props.onEditProfile}></button>\n                <p className=\"profile__job\" id=\"userjob\">{user.userDescription}</p>\n            </div>\n            <button type=\"button\" className=\"profile__place-edit\" onClick={props.onAddPlace}></button>\n        </section>\n        <section className=\"places\">\n        {cards.map( (item, i)  => { \n                    return (<Card  key={i} card={item} onCardClick={props.onCardClick}/>)\n        })}\n        </section>\n    </main>\n    )\n}\n\n\n\n\n\n","export default function Footer() {\n    return(\n        <footer className=\"footer\">\n        <p className=\"footer__copyright\">\n            &copy;2021 Mesto Russia\n        </p>\n    </footer>\n    )\n}","export default function PopupWithForm(props) {\n\n    return (\n    <div className={`popup__overlay ${props.isOpen ? 'popup_opened' : ''}`} id={props.id}>\n    <div className=\"popup__container popup__container_theme_white\">\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form className={`form ${props.name}`} name={`${props.name}`} novalidate> \n        {props.children}\n        </form>\n        <button type=\"button\" className=\"popup__close\" onClick={props.onClose}></button>\n    </div>\n    </div>\n    )\n    }\n","export default function ImagePopup(props) {\n   const isEmpty = Object.keys(props.card).length === 0;\n   return(<>\n      <div className={`popup__overlay popup__overlay_photo ${!isEmpty ? 'popup_opened' : ''}`} id=\"photo\">\n            <div className=\"popup__container popup__container_theme_transparent\">\n               <img className=\"popup__img\" alt={props.card.name}\n               src={props.card.link}/>\n               <h2 className=\"popup__title-img\">{props.card.name}</h2>\n               <button type=\"button\" className=\"popup__close\" onClick={props.onClose}></button>\n            </div>\n      </div>\n   </>)\n}","import './index.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport PopupWithForm from './components/PopupWithForm';\nimport ImagePopup from './components/ImagePopup';\nimport React from 'react';\n\n\nfunction App() {\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n}\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n}\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n}\nfunction handleCardClick(card) {\n  setSelectedCard(card);\n}\n\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n  }\n\n  return (\n    <>\n    <div className=\"page\">\n    <Header/>\n    <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}/>\n    <Footer/>\n    <PopupWithForm title=\"Редактировать профиль\" id=\"profile\" name=\"profile-editor\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n      <input type=\"text\" minlength=\"2\" maxlength=\"40\" className=\"popup__input popup__input_name\" placeholder=\"Имя\" id=\"name\" required/>\n      <span className=\"popup__input-error\" id=\"name-error\"></span>\n      <input type=\"text\" minlength=\"2\" maxlength=\"200\" className=\"popup__input popup__input_job\" placeholder=\"Профессия\" id=\"about\" required/>\n      <span className=\"popup__input-error\" id=\"about-error\"></span>\n      <button type=\"submit\" className=\"popup__submit\">Сохранить</button>\n    </PopupWithForm>\n    <PopupWithForm title=\"Новое место\" id=\"newplace\" name=\"place-editor\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n      <input name=\"name\" type=\"text\" minlength=\"2\" maxlength=\"30\" className=\"popup__input popup__input_place\" placeholder=\"Название\" id=\"place\" required/>\n      <span className=\"popup__input-error\" id=\"place-error\"></span>\n      <input name=\"link\" type=\"url\" className=\"popup__input popup__input_url\" placeholder=\"Ссылка на картинку\" id=\"url\" required/>\n      <span className=\"popup__input-error\" id=\"url-error\"></span>\n      <button type=\"submit\" className=\"popup__submit\">Создать</button>\n    </PopupWithForm>\n    <PopupWithForm title=\"Вы уверены?\" id=\"delete\" name=\"place-remove\" isOpen={false} onClose={closeAllPopups}>\n      <button type=\"submit\" className=\"popup__submit\">Да</button>\n    </PopupWithForm>\n    <PopupWithForm title=\"Обновить аватар\" id=\"avatar\" name=\"avatar-editor\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n      <input type=\"url\" className=\"popup__input popup__input_url\" placeholder=\"Ссылка на картинку\" id=\"url-avatar\" required/>\n            <span className=\"popup__input-error\" id=\"url-avatar-error\"></span>\n            <button type=\"submit\" className=\"popup__submit\">Сохранить</button>\n    </PopupWithForm>\n    <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}